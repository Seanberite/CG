About the OpenGL 3 examples
===========================

21 january upload

These are a set of very simple OpenGL 3.2 examples, moving through some basic functionality in small steps. This includes vertex/color/normal/texture coordinate buffers, basic transformations, textures, lighting and OBJ loading.

The code is written and mostly tested under MacOS X 10.7 or 10.8 using Lightweight IDE (version 0.9.5p+3 or better recommended). It has also been tested under Linux, but testing there is limited so bugs may creep in. See "White triangle" and "Perspective bunny" for examples with compilation instructions for Linux (in the source).

Makefiles? Sorry, for 16 demos I don't quite have the time right now. For Lightweight IDE you don't need one (major point with the program). I may produce a makefile later if I find the time.

In approximate order of complexity (which is pretty low for all of them):

White triangle
White triangle bundled (same demo aimed at building to a Mac application bundle)
Rotation
Rotation animation
Colored triangle
Phong triangle
Textured quad
Textured quad inline
Color cube
Textured cube
Mipmapped cube
Rotating gouraud cube
Rotating phong cube
Perspective bunny
Rotating perspective bunny
Textured teapot

plus the folder "Common":
This folder holds a set of utility files:
- GL_utilities: The main feature here is the shader loader (which will move into MicroGLut in the future once the Linux version is stable).
- loadobj: Loads Wavefront OBJ 3D models. Note: Limited to simple models. Some models are built from multiple separate shapes, and we don't support that.
- LoadTGA: Loads TGA images to textures. TGA is a simple image format with alpha support, suited for laboratory work.
- MicroGlut: This is a GLUT subset, Mac only so far. It is a really small cross-platform glue library. (A Linux version exists but is not sufficiently tested. Until we dare releasing the Linux version, FreeGLUT can be used.)
- VectorUtils2: A math library mainly dealing with vectors and matrices relevant for computer graphics.

Future plans: I consider adding one or two demos that demonstrate the higher-level usage of loadobj, where you can load and use OBJ files with very little code.

Thanks to Jens Ogniewski for testing early versions under Linux.


by Ingemar Ragnemalm 2012-2013
